$date
  Sun Sep 18 16:03:45 2016
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! clk $end
$var reg 1 " ram_we $end
$var reg 8 # ram_address[7:0] $end
$var reg 8 $ ram_input[7:0] $end
$var reg 8 % ram_output[7:0] $end
$var reg 1 & ram_enable $end
$var reg 1 ' ram_ready $end
$var reg 8 ( mem_address[7:0] $end
$var reg 8 ) port_reg[7:0] $end
$var reg 1 * port_read $end
$var reg 1 + port_write $end
$scope module ram0 $end
$var reg 1 , clock $end
$var reg 1 - we $end
$var reg 8 . address[7:0] $end
$var reg 8 / datain[7:0] $end
$var reg 8 0 dataout[7:0] $end
$comment ram is not handled $end
$var reg 8 1 read_address[7:0] $end
$upscope $end
$scope module tis0 $end
$var reg 1 2 clk $end
$var reg 1 3 rst $end
$var reg 8 4 io_in[7:0] $end
$var reg 1 5 io_read $end
$var reg 8 6 io_out[7:0] $end
$var reg 1 7 io_write $end
$var reg 8 8 mem_addr[7:0] $end
$var reg 8 9 mem_val[7:0] $end
$var reg 1 : mem_enable $end
$var reg 1 ; mem_ready $end
$var reg 8 < ip[7:0] $end
$var reg 8 = acc[7:0] $end
$var reg 8 > bak[7:0] $end
$var reg 8 ? instr_coded[7:0] $end
$var reg 4 @ instruction[3:0] $end
$var reg 4 A info1[3:0] $end
$var reg 8 B info2[7:0] $end
$comment fsm_state is not handled $end
$var integer 32 C current_state $end
$upscope $end
$enddefinitions $end
#0
0!
0"
bUUUUUUUU #
bUUUUUUUU $
bUUUUUUUU %
U&
0'
bUUUUUUUU (
bUUUUUUUU )
0*
0+
0,
0-
bUUUUUUUU .
bUUUUUUUU /
bUUUUUUUU 0
bUUUUUUUU 1
02
03
bUUUUUUUU 4
05
bUUUUUUUU 6
07
bUUUUUUUU 8
bUUUUUUUU 9
U:
0;
bUUUUUUUU <
bUUUUUUUU =
bUUUUUUUU >
bUUUUUUUU ?
bUUUU @
bUUUU A
bUUUUUUUU B
b10000000000000000000000000000000 C
#1000000
1!
1"
b00000000 #
b00001011 $
b00001011 %
0&
1,
1-
b00000000 .
b00001011 /
b00001011 0
b00000000 1
12
b00001011 9
0:
b00000000 <
b00000000 =
b00000000 >
b0 C
#2000000
0!
0,
02
#3000000
1!
b00000001 #
b00101010 $
b00101010 %
1&
b00000000 (
1,
b00000001 .
b00101010 /
b00101010 0
b00000001 1
12
b00000000 8
b00101010 9
1:
b1 C
#4000000
0!
0,
02
#5000000
1!
b00000010 #
b00000101 $
b00000101 %
1,
b00000010 .
b00000101 /
b00000101 0
b00000010 1
12
b00000101 9
#6000000
0!
0,
02
#7000000
1!
b00000011 #
b00000000 $
b00000000 %
1,
b00000011 .
b00000000 /
b00000000 0
b00000011 1
12
b00000000 9
#8000000
0!
0,
02
#9000000
1!
0"
b00000000 #
b00001011 %
1'
1,
0-
b00000000 .
b00001011 0
b00000000 1
12
b00001011 9
1;
#10000000
0!
0,
02
#11000000
1!
0&
1,
12
0:
b00000001 <
b00001011 ?
b1011 @
b0000 A
b10 C
#12000000
0!
0,
02
#13000000
1!
1&
0'
b00000001 (
1,
12
b00000001 8
1:
0;
b11 C
#14000000
0!
0,
02
#15000000
1!
b00000001 #
b00101010 %
1'
1,
b00000001 .
b00101010 0
b00000001 1
12
b00101010 9
1;
#16000000
0!
0,
02
#17000000
1!
0&
1,
12
0:
b00000010 <
b00101010 B
b100 C
#18000000
0!
0,
02
#19000000
1!
0'
1,
12
0;
b11010110 =
b101 C
#20000000
0!
0,
02
#21000000
1!
1&
b00000010 (
1,
12
b00000010 8
1:
b1 C
#22000000
0!
0,
02
#23000000
1!
b00000010 #
b00000101 %
1'
1,
b00000010 .
b00000101 0
b00000010 1
12
b00000101 9
1;
#24000000
0!
0,
02
#25000000
1!
0&
1,
12
0:
b00000011 <
b00000101 ?
b0101 @
b10 C
#26000000
0!
0,
02
#27000000
1!
0'
1,
12
0;
b00101010 =
b101 C
#28000000
0!
0,
02
#29000000
1!
1&
b00000011 (
1,
12
b00000011 8
1:
b1 C
#30000000
0!
0,
02
#31000000
1!
b00000011 #
b00000000 %
1'
1,
b00000011 .
b00000000 0
b00000011 1
12
b00000000 9
1;
#32000000
0!
0,
02
#33000000
1!
0&
1,
12
0:
b00000100 <
b00000000 ?
b0000 @
b10 C
#34000000
0!
0,
02
#35000000
1!
0'
1,
12
0;
b101 C
#36000000
0!
0,
02
#37000000
