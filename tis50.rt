
# System Registers
REGISTER IP(7:0), ACC(7:0), BAK(7:0);

# Helper Registers
REGISTER INSTR(3:0), INFO1(3:0), INFO2(7:0), VAL(7:0);

# Memory Interface
MEMORY MEMORY[7:0](7:0);
BUS    OUT   MEM_ADDR(7:0),
			 INOUT MEM_VALUE(7:0);
SIGNAL IN  MEM_READY, 
       OUT MEM_ENABLE,
			 OUT MEM_READ,
			 OUT MEM_WRITE;

# Port Interface
BUS INOUT PORT(7:0);
SIGNAL OUT PORT_ENABLE, 
       OUT PORT_READ,
			 OUT PORT_WRITE,
			 IN  PORT_READY;
	
JUMPTABLE INSTRUCTIONS(3:0) (
	0 => FETCH, # NOP
	1 => SWP,
	2 => SAV,
	3 => ADD_SRC,
	4 => SUB_SRC,
	5 => NEG,
	6 => JRO_SRC,
	7 => FETCH, # NOP
	8 => MOV_SRC,
	9 => MOV_IMM,
	A => ADD_IMM,
	B => SUB_IMM,
	C => JMP,
	D => JRO_IMM,
	E => FETCH, # NOP
	F => FETCH, # NOP
	);
	
INIT:
	IP <= 0, ACC <= 0, BAK <= 0;

FETCH:
	MEM_ADDR <= IP, MEM_READ <= 1;
	MEM_ENABLE <= 1;
FETCH_WAIT:
	IF not MEM_READY THEN GOTO FETCH_WAIT END;
	INFO1..INSTR <= MEM_VALUE,
		MEM_ENABLE <= 0,
		MEM_READ <= 'X',
		IP <= IP + 1,
		IF MEM_VALUE(3) = '0' THEN GOTO DECODE END;

FETCH_MORE:
	MEM_ADDR <= IP, MEM_READ <= 1;
	MEM_ENABLE <= 1;
FETCH_MORE_WAIT:
	IF not MEM_READY THEN GOTO FETCH_MORE_WAIT END;
	INFO2 <= MEM_VALUE,
		MEM_ENABLE <= 0,
		MEM_READ <= 'X',
		IP <= IP + 1;

DECODE:
	GOTO INSTRUCTIONS(INSTR);

SWP:
	ACC <= BAK, BAK <= ACC, GOTO FETCH;

SAV:
	BAK <= ACC, GOTO FETCH;

ADD_SRC:
	IF INFO1 = 3 THEN
		GOTO ADD_PORT
	ELSE
		CASE INFO1:
			WHEN 1: ACC <= ACC + ACC
		END,
		GOTO FETCH
	END;
	
ADD_PORT:
	PORT_READ <= 1, PORT_ENABLE <= 1;
ADD_PORT_LOOP:
	IF NOT PORT_READY THEN GOTO ADD_PORT_LOOP END;
	ACC <= ACC + PORT, PORT_READ <= 'X', PORT_ENABLE <= 0, GOTO FETCH;
	
SUB_SRC:
	IF INFO1 = 3 THEN
		GOTO SUB_PORT
	ELSE
		CASE INFO1:
			WHEN 1: ACC <= ACC - ACC
		END,
		GOTO FETCH
	END;
	
SUB_PORT:
	PORT_READ <= 1, PORT_ENABLE <= 1;
SUB_PORT_LOOP:
	IF NOT PORT_READY THEN GOTO ADD_PORT_SUB END;
	ACC <= ACC - PORT, PORT_READ <= 'X', PORT_ENABLE <= 0, GOTO FETCH;
	
NEG:
	ACC = 0 - ACC, GOTO FETCH;

JRO_SRC:

MOV_SRC:

MOV_IMM:
	IF INFO1 = 3 THEN
		GOTO MOV_IMM_PORT
	ELSE
		CASE INFO1:
			WHEN 1: ACC <= INFO2
		END,
		GOTO FETCH
	END;
	
MOV_IMM_PORT:
	PORT_WRITE <= 1, PORT_ENABLE <= 1;
MOV_IMM_PORT_LOOP:
	IF NOT PORT_READY THEN GOTO ADD_PORT_LOOP END;
	PORT <= INFO2, PORT_WRITE <= 'X', PORT_ENABLE <= 0, GOTO FETCH;

ADD_IMM:
	ACC <= ACC + INFO2, GOTO FETCH;

SUB_IMM:
	ACC <= ACC - INFO2, GOTO FETCH;

JMP:
	GOTO FETCH, CASE INFO1:
		WHEN 0: IP <= INFO2
		WHEN 1:
			IF ACC = 0 THEN
				IP <= INFO2
			END
		WHEN 2:
			IF ACC != 0 THEN
				IP <= INFO2
			END
		WHEN 3:
			IF ACC > 0THEN
				IP <= INFO2
			END
		WHEN 4:
			IF ACC < 0THEN
				IP <= INFO2
			END
	END

JRO_IMM:
	IP <= IP + INFO2 - 2, GOTO FETCH;